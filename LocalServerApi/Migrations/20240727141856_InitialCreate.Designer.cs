// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IdentityService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240727141856_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IdentityService.DataBase.UserLoginData", b =>
                {
                    b.Property<int>("IdLogin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdLogin"));

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Granttype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserLoginRegisterIdLoginRegister")
                        .HasColumnType("integer");

                    b.HasKey("IdLogin");

                    b.HasIndex("UserLoginRegisterIdLoginRegister");

                    b.ToTable("UserLoginData");
                });

            modelBuilder.Entity("IdentityService.DataBase.UserLoginRegister", b =>
                {
                    b.Property<int>("IdLoginRegister")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdLoginRegister"));

                    b.Property<int>("IdLogin")
                        .HasColumnType("integer");

                    b.Property<int>("IdRegister")
                        .HasColumnType("integer");

                    b.HasKey("IdLoginRegister");

                    b.HasIndex("IdLogin")
                        .IsUnique();

                    b.HasIndex("IdRegister")
                        .IsUnique();

                    b.ToTable("UserLoginRegister");
                });

            modelBuilder.Entity("IdentityService.DataBase.UserRegisterData", b =>
                {
                    b.Property<int>("IdRegister")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRegister"));

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Granttype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserLoginRegisterIdLoginRegister")
                        .HasColumnType("integer");

                    b.HasKey("IdRegister");

                    b.HasIndex("UserLoginRegisterIdLoginRegister");

                    b.ToTable("UserRegisterData");
                });

            modelBuilder.Entity("IdentityService.DataBase.UserLoginData", b =>
                {
                    b.HasOne("IdentityService.DataBase.UserLoginRegister", "UserLoginRegister")
                        .WithMany()
                        .HasForeignKey("UserLoginRegisterIdLoginRegister")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserLoginRegister");
                });

            modelBuilder.Entity("IdentityService.DataBase.UserLoginRegister", b =>
                {
                    b.HasOne("IdentityService.DataBase.UserLoginData", "UserLoginData")
                        .WithOne()
                        .HasForeignKey("IdentityService.DataBase.UserLoginRegister", "IdLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IdentityService.DataBase.UserRegisterData", "UserRegisterData")
                        .WithOne()
                        .HasForeignKey("IdentityService.DataBase.UserLoginRegister", "IdRegister")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserLoginData");

                    b.Navigation("UserRegisterData");
                });

            modelBuilder.Entity("IdentityService.DataBase.UserRegisterData", b =>
                {
                    b.HasOne("IdentityService.DataBase.UserLoginRegister", "UserLoginRegister")
                        .WithMany()
                        .HasForeignKey("UserLoginRegisterIdLoginRegister")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserLoginRegister");
                });
#pragma warning restore 612, 618
        }
    }
}
